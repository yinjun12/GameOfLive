int CheckLiveNumber(int i, int j, vector<vector<int>>& board)//求出在board[i][j]相邻的1的个数
{
	int leftup, leftdown, rightup, rightdown,cnt=0;
	if (i > 0) leftup = i - 1;//求横，纵坐标的范值；主要是在边界时的坐标范围
	else leftup = i;
	if (i < board.size() - 1)leftdown = i + 1;
	else leftdown = i;
	if (j>0) rightup = j - 1;
	else rightup = j;
	if (j < board[0].size() - 1) rightdown = j + 1;
	else rightdown = j;
	for (int m = leftup; m <= leftdown;m++)
	for (int n = rightup; n <= rightdown;n++)
	{
		if (m == i&&n == j) continue;
		if (board[m][n] == 1) cnt++;
	}
	return cnt;
}
    void gameOfLife(vector<vector<int>>& board) {
        vector<vector<int>>ret(board);//先备份一个，避免在改变过程中，用改变的结果去更新下一个结果。
	for (int i = 0; i < board.size(); i++)
	{
		for (int j = 0; j < board[0].size(); j++)
		{
			int num = CheckLiveNumber(i, j, board);//求出1的个数 
			if (ret[i][j] == 1 && num < 2) ret[i][j] = 0;//根据所给的四个条件进行更改Ret;
			else if (ret[i][j] == 1 && num == 2 || ret[i][j] == 1 && num == 3) ret[i][j] = 1;
			else if (ret[i][j] == 1 && num>3) ret[i][j] = 0;
			else if (ret[i][j] == 0 && num == 3) ret[i][j] = 1;
		}
	}
	board = ret;
        
    }
